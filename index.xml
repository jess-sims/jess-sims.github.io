<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>J Sims</title><link>https://jess-sims.github.io/</link><description>Recent content on J Sims</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 08 Jul 2023 08:06:25 +0600</lastBuildDate><atom:link href="https://jess-sims.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>How to create a Hugo Website</title><link>https://jess-sims.github.io/posts/hugo/</link><pubDate>Sat, 08 Jul 2023 08:06:25 +0600</pubDate><guid>https://jess-sims.github.io/posts/hugo/</guid><description>Hugo is a fast, open-source static website generator with many contributors and themes available to suit various needs. It&amp;rsquo;s a fantastic resource for blogs, portfolios and documentation sites and a great tool to keep web hosting costs low as Hugo sites may be hosted on github pages, netlifier and other similar services. As there are various themes available it is also relatively simple to configure a website with minimal coding and command line experience.</description></item><item><title>Git and GitHub</title><link>https://jess-sims.github.io/posts/git/</link><pubDate>Mon, 03 Jul 2023 11:23:00 +0600</pubDate><guid>https://jess-sims.github.io/posts/git/</guid><description>Git is an extremely useful distributed version control system which allows the user to track changes to their files. Git is frequently used among developers, technical writers and other collaborative professions to manage their projects and releases.
GitHub is a hosting service which works hand in hand with Git so that collaborators may share their projects by hosting the main and current copy of the project on a GitHub repository. From GitHub, users may pull a copy of the project to their local machine, open problem reports and create branches and merge requests which may then be reviewed by the project owner(s).</description></item><item><title>Using Markdown</title><link>https://jess-sims.github.io/posts/markdown/</link><pubDate>Fri, 05 May 2023 10:56:25 +0600</pubDate><guid>https://jess-sims.github.io/posts/markdown/</guid><description>Markdown is a lightweight markup language used to make webpages easier on on the eye when displayed and simplier to read in plain text format. Markdown is widely popular due to its ease of use and its acceptance by many applications such as documentation systems, note-taking applications and messaging systems.
The below examples showcase some of the basic Markdown syntax elements, however, there are more features and Markdown flavours available depending on the Markdown implementation or specific application you&amp;rsquo;re using.</description></item><item><title>Go পরিচিতি</title><link>https://jess-sims.github.io/notes/go/basic/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jess-sims.github.io/notes/go/basic/introduction/</guid><description> Hello World
A sample go program is show here.
package main import &amp;#34;fmt&amp;#34; func main() { message := greetMe(&amp;#34;world&amp;#34;) fmt.Println(message) } func greetMe(name string) string { return &amp;#34;Hello, &amp;#34; + name + &amp;#34;!&amp;#34; } Run the program as below:
$ go run hello.go Variables
Normal Declaration:
var msg string msg = &amp;#34;Hello&amp;#34; Shortcut:
msg := &amp;#34;Hello&amp;#34; Constants
const Phi = 1.618</description></item><item><title>Go বেসিক</title><link>https://jess-sims.github.io/notes/go/basic/_index.bn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jess-sims.github.io/notes/go/basic/_index.bn/</guid><description/></item><item><title>বেসিক টাইপ সমূহ</title><link>https://jess-sims.github.io/notes/go/basic/types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jess-sims.github.io/notes/go/basic/types/</guid><description>Strings
str := &amp;#34;Hello&amp;#34; Multiline string
str := `Multiline string` Numbers
Typical types
num := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(&amp;#39;a&amp;#39;) // byte (alias for uint8) Other Types
var u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays
// var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers
func main () { b := *getPointer() fmt.</description></item><item><title>Flow Control</title><link>https://jess-sims.github.io/notes/go/basic/flow-control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jess-sims.github.io/notes/go/basic/flow-control/</guid><description>Condition
if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;) Switch
switch day { case &amp;#34;sunday&amp;#34;: // cases don&amp;#39;t &amp;#34;fall through&amp;#34; by default! fallthrough case &amp;#34;saturday&amp;#34;: rest() default: work() } Loop
for count := 0; count &amp;lt;= 10; count++ { fmt.Println(&amp;#34;My counter is at&amp;#34;, count) } entry := []string{&amp;#34;Jack&amp;#34;,&amp;#34;John&amp;#34;,&amp;#34;Jones&amp;#34;} for i, val := range entry { fmt.</description></item><item><title>File Manipulation</title><link>https://jess-sims.github.io/notes/go/advanced/files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jess-sims.github.io/notes/go/advanced/files/</guid><description> Condition
if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;)</description></item><item><title>Bash Variables</title><link>https://jess-sims.github.io/notes/bash/basic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jess-sims.github.io/notes/bash/basic/</guid><description> Variable
NAME=&amp;#34;John&amp;#34; echo $NAME echo &amp;#34;$NAME&amp;#34; echo &amp;#34;${NAME} Condition
if [[ -z &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is empty&amp;#34; elif [[ -n &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is not empty&amp;#34; fi</description></item></channel></rss>